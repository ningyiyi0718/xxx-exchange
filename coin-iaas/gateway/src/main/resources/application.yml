server:
  port: 88
spring:
  application:
    name: gateway
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.56.10:8848 # nacos-server:8848 修改本机的host
    gateway:
      discovery:
        locator:
          enabled: true # 网关的服务发现
          lower-case-service-id: true # 路径小驼峰转换
      routes:
      - id: admin-service_router
        uri: lb://admin-service   # 转发到哪个目的地
        predicates:
          - Path=/admin/**
        filters:
          - StripPrefix=1 # 当前端访问/admin/login - >login 将admin自动的去掉
    # 通过网关来完成对2 种维度的限流： 网关维度 + API 分组
    sentinel:
      transport:
        dashboard: 127.0.0.1:8858  # sentinel-dashboard 放在ecs 里面
      datasource:
#        ds1.file:
#          file: classpath:gw-flow.json  # 网关 + API分组的限流
#          ruleType: gw_flow
         ds1.nacos: #com.alibaba.csp.sentinel.datasource.nacos.NacosDataSource 使用Nacos持久化我的sentinel 数据时，需要添加nacos-datasource的依赖
           serverAddr: 192.168.56.10:8848
           dataId: gw-flow
           ruleType: gw_flow
#
#        ds2.file:
#          file: classpath:gw-api-group.json
#          ruleType: gw_api_group
         ds2.nacos:
           serverAddr: 192.168.56.10:8848
           dataId: gw-api-group
           ruleType: gw_api_group # 我们演示了sentinel-dashboard 的规则的定义，而且规则定义好了后，我们的网关能立马的感知到（生效）（nacos无法感知），但是我们下次重启，会丢失规则。--》nacos
#  redis: # 网关请求redis判断jwt-token是否存在
#    host: 192.168.56.10
#    port: 6379
#    password: 1q2w3e4r

